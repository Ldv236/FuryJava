package ru.ldv236.core2.files_io;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.util.List;

public class FileDemo {
    public static void main(String[] args) throws IOException {
        String fileName = "example.txt";
//        String filePath = fileName; // –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
//        String filePath = "files/" + fileName; // –≤ –ø–∞–ø–∫–µ –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
        String filePath = "src/main/java/ru/ldv236/core2/files_io/" + fileName; // –≤–º–µ—Å—Ç–µ —Å –ø—Ä–∏–º–µ—Ä–æ–º –∫–æ–¥–∞
//        String filePath = "C:/files/" + fileName; //–∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å

        // === 1. –ó–∞–ø–∏—Å—å —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª ===
        writeToFile(filePath, "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!\n–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –≤ Java.");


        // === 2. –ß—Ç–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ ===
        readFromFile(filePath);

        // === 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª ===
        appendToFile(filePath, "\n–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ñ–∞–π–ª.");

        // === 4. –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ (–Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ NIO) ===
        readLinesUsingNio(filePath);

        // === 5. –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ ===
        deleteFile(filePath);
    }

//    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BufferedWriter –∏ FileWriter.
//    –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
//            –ú–µ—Ç–æ–¥ try-with-resources –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏.
//    –ö–ª—é—á–µ–≤—ã–µ –∫–ª–∞—Å—Å—ã:
//    BufferedWriter ‚Äî –±—É—Ñ–µ—Ä–∏–∑—É–µ—Ç —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏.
//            FileWriter ‚Äî –ø–æ—Ç–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ñ–∞–π–ª.
    /**
     * 1Ô∏è‚É£ –ó–∞–ø–∏—Å—å —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª. –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ.
     *
     * @param filePath –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
     * @param content  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª
     */
    public static void writeToFile(String filePath, String content) {
//        FileWriter writer = null;
//        try {
//            writer = new FileWriter(filePath);
//            writer.write("–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ–∫—Å—Ç, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–π –≤ —Ñ–∞–π–ª –±–µ–∑ try-with-resources.\n");
//            writer.write("–ó–¥–µ—Å—å —Ä–µ—Å—É—Ä—Å—ã –±—É–¥—É—Ç –∑–∞–∫—Ä—ã—Ç—ã –≤—Ä—É—á–Ω—É—é.");
//            System.out.println("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª: " + filePath);
//        } catch (IOException e) {
//            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
//        } finally {
//            if (writer != null) {
//                try {
//                    writer.close();
//                    System.out.println("‚úÖ FileWriter –∑–∞–∫—Ä—ã—Ç.");
//                } catch (IOException e) {
//                    System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ FileWriter: " + e.getMessage());
//                }
//            }
//        }
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
            writer.write(content);
            System.out.println("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω: " + filePath);
        } catch (IOException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
        }
    }

//    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BufferedReader –∏ FileReader.
//    –ú–µ—Ç–æ–¥ readLine() —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ—Å—Ç—Ä–æ—á–Ω–æ.
//    –ö–ª—é—á–µ–≤—ã–µ –∫–ª–∞—Å—Å—ã:
//    BufferedReader ‚Äî —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –±—É—Ñ–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–æ (–º–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —á—Ç–µ–Ω–∏—è).
//    FileReader ‚Äî –ø–æ—Ç–æ–∫ –¥–ª—è —á—Ç–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞.
    /**
     * 2Ô∏è‚É£ –ß—Ç–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ –∏ –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω.
     *
     * @param filePath –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
     */
    public static void readFromFile(String filePath) {
        System.out.println("\nüìò –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ " + filePath + ":");
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
        }
    }

//    –û—Ç–ª–∏—á–∏–µ –æ—Ç writeToFile ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è new FileWriter(filePath, true), –≥–¥–µ true –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
//    –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞, –Ω–µ —É–¥–∞–ª—è—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.
    /**
     * 3Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª.
     *
     * @param filePath –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
     * @param content  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Ñ–∞–π–ª
     */
    public static void appendToFile(String filePath, String content) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath, true))) {
            writer.write(content);
            System.out.println("\n‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª: " + filePath);
        } catch (IOException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª: " + e.getMessage());
        }
    }

//    Files.readAllLines(Path.of(filePath)) —á–∏—Ç–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö –∫–∞–∫ List<String>.
//    –≠—Ç–æ—Ç —Å–ø–æ—Å–æ–± –ø—Ä–æ—â–µ –∏ —É–¥–æ–±–Ω–µ–µ, —á–µ–º BufferedReader, –Ω–æ –æ–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤–µ—Å—å —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç—å.
//    –ö–ª—é—á–µ–≤—ã–µ –∫–ª–∞—Å—Å—ã:
//    Files ‚Äî –∫–ª–∞—Å—Å —Å —É—Ç–∏–ª–∏—Ç–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏.
//            Path.of() ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –≤ —Å—Ç–∏–ª–µ NIO.
    /**
     * 4Ô∏è‚É£ –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —á–µ—Ä–µ–∑ NIO (Files.readAllLines).
     *
     * @param filePath –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
     */
    public static void readLinesUsingNio(String filePath) {
        System.out.println("\nüìò –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Files.readAllLines:");
        try {
            List<String> lines = Files.readAllLines(Path.of(filePath));
            for (String line : lines) {
                System.out.println(line);
            }
        } catch (IOException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º NIO: " + e.getMessage());
        }
    }

//    –ú–µ—Ç–æ–¥ Files.deleteIfExists(Path.of(filePath)) —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
//    –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç Files.delete(), —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–µ –≤—ã–±—Ä–æ—Å–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
//    –ö–ª—é—á–µ–≤—ã–µ –∫–ª–∞—Å—Å—ã:
//    Files ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏, –≤–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–∏–µ, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ.
//            Path ‚Äî –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥—É.
    /**
     * 5Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞.
     *
     * @param filePath –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
     */
    public static void deleteFile(String filePath) {
        try {
            Files.deleteIfExists(Path.of(filePath));
            System.out.println("\nüóëÔ∏è –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω: " + filePath);
        } catch (IOException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: " + e.getMessage());
        }
    }
}
